[func_def_start(0)]
이 함수는 main 함수로, 프로그램의 시작 지점을 나타낸다.
[self_start(1)]
테스트 케이스의 개수 T를 입력받는다.
[self_end(1)]
[rep_start(1)]
T가 0보다 큰 동안 반복하며 각 테스트 케이스에 대한 처리를 진행한다.
[self_start(2)]
각 테스트 케이스에 대해 수강생의 수 K를 입력받고, K명의 수강생의 참가 번호를 배열에 저장한다.
[self_end(2)]
[self_start(2)]
다음으로 대회에 참가한 총 인원 N을 입력받는다.
[self_end(2)]
각 수강생의 인증서 수와 가장 빠른 기록을 가진 수강생을 추적하기 위한 변수를 초기화한다.
[self_start(2)]
N명의 참가자에 대한 반복문을 시작한다.
[self_end(2)]
각 참가자의 참가 번호, 시, 분을 입력받고, 중간에 포기한 경우를 체크한다.
[cond_start(3)]
만약 기록이 -1 -1이라면 다음 참가자로 넘어간다.
[cond_end(3)]
학생인지 확인하기 위한 변수를 선언하고,
학생 리스트 배열을 반복하여 확인한다.
[rep_start(3)]
내부 반복문을 통해 현재 참가자가 수강생 목록에 있는지 확인한다.
[cond_start(4)]
참가 번호가 현재 배열의 학생과 같다면, is_student 변수를 1로 설정한다.
[cond_end(4)]
[rep_end(3)]
[cond_start(3)]
현재 참가자가 수강생인 경우, 시와 분을 분으로 환산한다.
[cond_start(4)]
이 기록이 6시간(360분) 이하인 경우, 인증서 카운트를 증가시키고,
기록이 더 빨랐다면, 가장 빠른 기록과 참가 번호를 업데이트한다.
[cond_end(4)]
[cond_end(3)]
[rep_end(2)]
결과를 출력하며, T를 감소시켜 반복을 종료한다.
[self_start(1)]
프로그램의 종료를 위한 return 문으로 마무리한다.
[self_end(1)]
[func_def_end(0)]