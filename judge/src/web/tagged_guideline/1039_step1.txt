[main_def_start(0)]
목표: 세 자리 수를 입력받아 가장 큰 자릿수를 찾는 프로그램을 만드세요.
프로그램의 시작점인 main 함수를 정의하세요.
반환 타입은 int이고 매개변수는 void로 설정하세요.
이 프로그램은 세 자리 수를 입력받아 백의 자리, 십의 자리, 일의 자리 중 가장 큰 수를 출력합니다.
[self_start(1)]
목표: 세 자리 수를 저장할 변수를 만드세요.
int 타입 변수 n을 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 사용자로부터 세 자리 수를 입력받으세요.
scanf 함수와 %d 형식 지정자를 사용해서 n에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(1)]
[self_start(1)]
목표: 백의 자리 수를 추출하세요.
int 타입 변수 hundreds를 선언하고 n을 100으로 나눈 몫으로 초기화하세요.
[self_end(1)]
[self_start(1)]
목표: 십의 자리 수를 추출하세요.
int 타입 변수 tens를 선언하고 n을 10으로 나눈 몫을 다시 10으로 나눈 나머지로 초기화하세요.
[self_end(1)]
[self_start(1)]
목표: 일의 자리 수를 추출하세요.
int 타입 변수 ones를 선언하고 n을 10으로 나눈 나머지로 초기화하세요.
[self_end(1)]
[self_start(1)]
목표: 최댓값을 저장할 변수를 만들고 초기화하세요.
int 타입 변수 max를 선언하고 hundreds 값으로 초기화하세요.
[self_end(1)]
[cond_start(1)]
목표: 십의 자리가 현재 최댓값보다 큰지 확인하세요.
if (조건) {
조건: tens가 max보다 큰지 확인하는 조건을 작성하세요.
[self_start(2)]
목표: 더 큰 값을 발견했으므로 최댓값을 갱신하세요.
max 변수에 tens 값을 대입하세요.
[self_end(2)]
[cond_end(1)]
[cond_start(1)]
목표: 일의 자리가 현재 최댓값보다 큰지 확인하세요.
if (조건) {
조건: ones가 max보다 큰지 확인하는 조건을 작성하세요.
[self_start(2)]
목표: 더 큰 값을 발견했으므로 최댓값을 갱신하세요.
max 변수에 ones 값을 대입하세요.
[self_end(2)]
[cond_end(1)]
[self_start(1)]
목표: 가장 큰 자릿수를 출력하세요.
printf 함수와 %d 형식 지정자를 사용해서 max 변수를 출력하세요.
[self_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.
return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1]]
[main_def_end(0)]