[main_def_start(0)]
목표: 문자열에서 각 숫자의 개수를 세는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
반환 타입은 int이고 매개변수는 void로 설정하세요.
이 프로그램은 문자열을 입력받아 0부터 9까지 각 숫자가 몇 번 나타나는지 세어 출력합니다.
[self_start(1)]
목표: 입력받을 문자열을 저장할 공간을 만드세요.

char 타입 배열 str을 크기 101로 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 각 숫자의 개수를 저장할 배열을 만드세요.

int 타입 배열 count를 크기 10으로 선언하고 모든 요소를 0으로 초기화하세요.
인덱스 0 ~ 9는 각각 숫자 0 ~ 9의 개수를 저장합니다.
[self_end(1)]
[self_start(1)]
목표: 사용자로부터 문자열을 입력받으세요.

scanf 함수와 %s 형식 지정자를 사용해서 str 배열에 저장하세요.
[self_end(1)]
[rep_start(1)]
목표: 문자열의 각 문자를 하나씩 검사하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: str[i]가 널 문자가 아닐 때까지, 반복: i를 1씩 증가
[cond_start(2)]
목표: 현재 문자가 숫자인지 확인하세요.

if (조건) {
조건: str[i]가 '0'부터 '9' 사이에 있는지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 해당 숫자의 개수를 증가시키세요.

count 배열에서 str[i] - '0' 인덱스의 값을 1 증가시키세요.
문자를 숫자로 변환하기 위해 '0'을 빼야 합니다.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[rep_start(1)]
목표: 각 숫자의 개수를 출력하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 10보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 각 숫자의 개수를 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 count[i] 값을 출력하세요.
[self_end(2)]
[cond_start(2)]
목표: 마지막 숫자가 아니면 공백을 출력하세요.

if (조건) {
조건: i가 9가 아닌지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 숫자 사이에 공백을 추가하세요.

printf 함수를 사용해서 공백 문자를 출력하세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.

return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1)]
[main_def_end(0)]