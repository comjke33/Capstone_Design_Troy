[func_def_start(0)]
목표: 배열에서 가장 작은 값을 찾는 함수를 만드세요.

함수명은 find_min으로 하고 반환 타입은 int로 설정하세요.
매개변수는 int 배열 arr과 배열 크기 size를 받도록 하세요.
이 함수는 배열의 모든 요소를 검사해서 가장 작은 값을 반환합니다.
[self_start(1)]
목표: 최솟값을 저장할 변수를 만들고 초기화하세요.

int 타입 변수 min을 선언하고 arr[0] 값으로 초기화하세요.
[self_end(1)]
[rep_start(1)]
목표: 배열의 나머지 요소들을 검사하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 1로 시작, 조건: i가 size보다 작을 때까지, 반복: i를 1씩 증가
[cond_start(2)]
목표: 현재 요소가 지금까지의 최솟값보다 작은지 확인하세요.

if (조건) {
조건: arr[i]가 min보다 작은지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 더 작은 값을 발견했으므로 최솟값을 갱신하세요.

min 변수에 arr[i] 값을 대입하세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 찾은 최솟값을 반환하세요.

return문을 사용해서 min 변수를 반환하세요.
[self_end(1)]
[func_def_end(0)]
[main_def_start(0)]
목표: n개의 정수를 입력받아 최솟값을 출력하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
반환 타입은 int이고 매개변수는 void로 설정하세요.
이 프로그램은 n개의 정수를 입력받아 그 중 최솟값을 출력합니다.
[self_start(1)]
목표: 배열의 크기를 저장할 변수를 만드세요.

int 타입 변수 n을 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 정수들을 저장할 배열을 만드세요.

int 타입 배열 arr을 크기 100으로 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 배열의 크기를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 n에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(1)]
[rep_start(1)]
목표: 배열에 n개의 정수를 입력받는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 n보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 각 배열 요소에 정수를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 arr[i]에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
목표: find_min 함수를 호출해서 최솟값을 구하세요.

int 타입 변수 result를 선언하고 find_min 함수의 결과로 초기화하세요.
함수 호출 시 arr과 n을 매개변수로 전달하세요.
[self_end(1)]
[self_start(1)]
목표: 최솟값을 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 result 변수를 출력하세요.
[self_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.

return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1)]
[main_def_end(0)]
