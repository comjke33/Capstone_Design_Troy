[func_def_start(0)]
정수형 배열과 크기를 매개변수로 받는 `find_min` 함수를 정의하세요.
int형 포인터 변수 arr을 매개변수로 받습니다.
int형 변수 size를 매개변수로 받아 배열의 크기를 나타냅니다.
[self_start(1)]
arr의 첫 번째 요소로 초기화된 min 변수 선언하세요.
배열의 첫 번째 값을 min에 저장합니다.
[self_end(1)]
[rep_start(1)]
i가 1부터 size보다 작을 때까지 증가하는 for문을 작성하세요.
배열의 모든 요소를 순회하여 최소값을 찾는 과정입니다.
[cond_start(2)]
arr[i]가 min보다 작으면 동작하는 if문을 작성하세요.
현재 요소가 현재 최소값보다 더 작은지를 비교하는 조건문입니다.
[self_start(3)]
현재 요소인 arr[i]를 min에 저장하세요.
새로운 최소값을 갱신하는 과정입니다.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
최종적으로 찾은 min 값을 반환하세요.
배열의 최솟값을 반환하는 의미입니다.
[self_end(1)]
[func_def_end(0)]

[main_def_start(0)]
main 함수를 정의하세요.
[self_start(1)]
정수형 변수 n을 선언하여 배열의 크기를 나타냅니다.
[self_end(1)]
[self_start(1)]
길이가 100인 int형 배열 arr을 선언하세요.
[self_end(1)]
[self_start(1)]
사용자로부터 배열의 크기 n을 입력받기 위해 scanf를 사용하세요.
배열에 저장될 값의 개수를 입력 받는 과정입니다.
[self_end(1)]
[rep_start(1)]
i가 0부터 n보다 작을 때까지 증가하는 for문을 작성하세요.
배열의 각 요소를 입력받기 위한 반복입니다.
[self_start(2)]
각 요소를 사용자로부터 입력받아 arr[i]에 저장하세요.
정수 형태의 데이터를 배열에 저장하는 과정입니다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
find_min 함수를 호출하여 arr과 n을 인자로 전달하고 결과를 result에 저장하세요.
배열과 그 크기를 이용해 최소값을 찾는 과정입니다.
[self_end(1)]
[self_start(1)]
찾은 결과인 result를 출력하세요.
최솟값 결과를 사용자에게 보여주는 단계입니다.
[self_end(1)]
[self_start(1)]
프로그램을 정상적으로 종료하세요.
프로그램 실행을 끝내는 의미입니다.
[self_end(1)]
[main_def_end(0)]