[func_def_start(0)]
목표: 두 수의 최소공배수의 자릿수를 구하는 함수를 만드세요.

함수명은 digit_count_lcm으로 하고 반환 타입은 int로 설정하세요.
매개변수는 int 타입 a와 b를 받도록 하세요.
이 함수는 두 수의 최소공배수를 구한 다음 그 수의 자릿수를 세어 반환합니다.
[self_start(1)]
목표: 최소공배수를 찾기 위한 시작값을 설정하세요.

int 타입 변수 max를 선언하고 a와 b 중 큰 값으로 초기화하세요.
삼항 연산자를 사용해서 조건에 따라 값을 결정하세요.
[self_end(1)]
[rep_start(1)]
목표: 최소공배수를 찾는 무한 반복문을 만드세요.

예: while (조건) {
조건: 1을 사용해서 무한 반복문을 만드세요.
[cond_start(2)]
목표: 현재 값이 두 수의 공배수인지 확인하세요.

if (조건) {
조건: max가 a와 b 모두로 나누어떨어지는지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 최소공배수를 찾았으므로 반복문을 종료하세요.

break문을 사용하세요.
[self_end(3)]
[cond_end(2)]
[self_start(2)]
목표: 공배수가 아니므로 다음 수를 검사하세요.

max 변수를 1 증가시키세요.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 자릿수를 세기 위한 변수를 만드세요.

int 타입 변수 count를 선언하고 0으로 초기화하세요.
[self_end(1)]
[self_start(1)]
목표: 최소공배수 값을 임시 변수에 저장하세요.

int 타입 변수 result를 선언하고 max 값으로 초기화하세요.
[self_end(1)]
[rep_start(1)]
목표: 자릿수를 세는 반복문을 만드세요.

예: while (조건) {
조건: result가 0보다 클 때까지 반복하세요.
[self_start(2)]
목표: 가장 오른쪽 자릿수를 제거하세요.

result를 10으로 나눈 몫으로 업데이트하세요.
[self_end(2)]
[self_start(2)]
목표: 자릿수 개수를 증가시키세요.

count 변수를 1 증가시키세요.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 최소공배수의 자릿수를 반환하세요.

return문을 사용해서 count 변수를 반환하세요.
[self_end(1)]
[func_def_end(0)]
[main_def_start(0)]
목표: 두 정수를 입력받아 최소공배수의 자릿수를 출력하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
반환 타입은 int이고 매개변수는 void로 설정하세요.
이 프로그램은 두 정수를 입력받아 그들의 최소공배수의 자릿수를 출력합니다.
[self_start(1)]
목표: 두 정수를 저장할 변수를 만드세요.

int 타입 변수 a와 b를 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 사용자로부터 두 정수를 입력받으세요.

scanf 함수와 %d %d 형식 지정자를 사용해서 a와 b에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(1)]
[self_start(1)]
목표: 최소공배수의 자릿수를 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 digit_count_lcm 함수의 결과를 출력하세요.
함수 호출 시 a와 b를 매개변수로 전달하세요.
[self_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.

return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1)]
[main_def_end(0)]