[main_def_start(0)]
main 함수를 정의하세요.
[self_start(1)]
배열 크기 N과 M을 선언하세요.
[self_end(1)]
[self_start(1)]
100x100 크기의 정수형 배열 arr을 선언하세요.
[self_end(1)]
[self_start(1)]
scanf 함수를 사용하여 N과 M을 입력 받으세요.
사용자의 N과 M 값을 입력 받기 위해 scanf 함수를 사용합니다.
입력 값을 받아 저장합니다.
[self_end(1)]
[rep_start(1)]
0부터 N까지 반복하는 for문을 작성하세요.
배열의 행을 입력 받기 위한 반복문입니다.
행별로 정수를 입력 받을 때가 됩니다.
[rep_start(2)]
0부터 M까지 반복하는 for문을 작성하세요.
배열의 열을 입력 받기 위한 반복문입니다.
열별로 정수를 입력 받을 때가 됩니다.
[self_start(3)]
scanf 함수를 사용하여 arr[i][j]에 i와 j에 해당하는 값을 입력 받으세요.
사용자의 입력값을 배열에 저장합니다.
각 행의 각 열에 해당하는 값을 저장 받습니다.
[self_end(3)]
[rep_end(2)]
[rep_end(1)]
[rep_start(1)]
0부터 M까지 반복하는 for문을 작성하세요.
배열의 열을 출력 받기 위한 반복문입니다.
열별로 배열의 값을 출력할 때가 됩니다.
[rep_start(2)]
0부터 N까지 반복하는 for문을 작성하세요.
배열의 행을 출력 받기 위한 반복문입니다.
행별로 배열의 값을 출력할 때가 됩니다.
[self_start(3)]
printf 함수를 사용하여 arr[i][j] 값을 출력하세요.
각 행의 각 열에 해당하는 값을 출력합니다.
[self_end(3)]
[cond_start(3)]
i가 N-1 보다 작을 때 동작하는 if문을 작성하세요.
가운데 공백 출력 조건입니다.
각 열에 출력될 정수 사이에 공백을 넣기 위한 조건입니다.
[self_start(4)]
printf 함수를 사용하여 " "를 출력하세요.
정수 사이에 공백을 넣습니다.
각 열의 정수 사이에 공백을 넣어 가독성을 높입니다.
[self_end(4)]
[cond_end(3)]
[rep_end(2)]
[self_start(2)]
printf 함수를 사용하여 "\n"을 출력하세요.
줄 바꿈을 수행합니다.
배열 값을 출력한 후 새 줄을 출력합니다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
프로그램 종료를 위해 0을 반환하세요.
프로그램 종료를 위한 정상적인 종료입니다.
[self_end(1)]
[main_def_end(0)]