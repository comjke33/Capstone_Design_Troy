[main_def_start(0)]
목표: 스택 자료구조를 구현하여 여러 명령을 처리하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
[self_start(1)]
목표: 필요한 변수들을 선언하고 명령 개수를 입력받으세요.

스택 배열 stack, 스택의 맨 위 인덱스 top, 명령 개수 N, 명령어를 저장할 command를 선언하고 N을 입력받으세요.
[self_end(1)]
[rep_start(1)]
목표: N번의 명령을 처리하는 반복문을 만드세요.

변수 i를 사용해서 N번 반복하세요.
[self_start(2)]
목표: 명령어를 입력받으세요.

command에 명령어 문자열을 입력받으세요.
[self_end(2)]
[cond_start(2)]
목표: push 명령을 처리하세요.

command가 "push"일 때 정수를 입력받아 스택에 추가하세요.
[cond_end(2)]
[cond_start(2)]
목표: pop 명령을 처리하세요.

command가 "pop"일 때 스택이 비어있으면 -1을, 아니면 맨 위 요소를 출력하고 제거하세요.
[cond_start(3)]
목표: 스택이 비어있는 경우를 처리하세요.

top이 -1일 때 -1을 출력하세요.
[cond_end(3)]
[cond_start(3)]
목표: 스택에 요소가 있는 경우를 처리하세요.

스택의 맨 위 요소를 출력하고 top을 감소시키세요.
[cond_end(3)]
[cond_end(2)]
[cond_start(2)]
목표: size 명령을 처리하세요.

command가 "size"일 때 스택의 크기를 출력하세요.
[cond_end(2)]
[cond_start(2)]
목표: empty 명령을 처리하세요.

command가 "empty"일 때 스택이 비어있으면 1을, 아니면 0을 출력하세요.
[cond_start(3)]
목표: 스택이 비어있는 경우를 처리하세요.

top이 -1일 때 1을 출력하세요.
[cond_end(3)]
[cond_start(3)]
목표: 스택에 요소가 있는 경우를 처리하세요.

0을 출력하세요.
[cond_end(3)]
[cond_end(2)]
[cond_start(2)]
목표: top 명령을 처리하세요.

command가 "top"일 때 스택이 비어있으면 -1을, 아니면 맨 위 요소를 출력하세요.
[cond_start(3)]
목표: 스택이 비어있는 경우를 처리하세요.

top이 -1일 때 -1을 출력하세요.
[cond_end(3)]
[cond_start(3)]
목표: 스택에 요소가 있는 경우를 처리하세요.

스택의 맨 위 요소를 출력하세요.
[cond_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 프로그램을 종료하세요.

프로그램을 정상적으로 종료하세요.
[self_end(1)]
[main_def_end(0)]