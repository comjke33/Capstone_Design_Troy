[func_def_start(0)]
목표: 배열에서 모든 자릿수가 홀수인 수의 개수를 세는 함수를 만드세요.

함수명은 count_all_odd_digits로 하고 반환 타입은 int로 설정하세요.
매개변수는 int 배열 arr과 배열 크기 size를 받도록 하세요.
이 함수는 배열의 각 수를 검사해서 모든 자릿수가 홀수인 수의 개수를 반환합니다.
[self_start(1)]
목표: 조건을 만족하는 수의 개수를 세기 위한 변수를 만드세요.

int 타입 변수 count를 선언하고 0으로 초기화하세요.
[self_end(1)]
[self_start(1)]
목표: 두 수중 작은값을 찾아 저장하세요.

int 타입 변수 min을 선언하고 삼항 연산자를 사용하세요.
조건:a가 b보다 작으면 a를, 그렇지 않으면 b를 min에저장하세요.
[self_end(1)]
[rep_start(1)]
목표: 배열의 모든 요소를 하나씩 검사하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 size보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 현재 배열 요소를 임시 변수에 저장하세요.

int 타입 변수 n을 선언하고 arr[i] 값으로 초기화하세요.
[self_end(2)]
[self_start(2)]
목표: 모든 자릿수가 홀수인지 확인하는 플래그 변수를 만드세요.

int 타입 변수 all_odd를 선언하고 1로 초기화하세요.
짝수 자릿수를 발견하면 0으로 변경할 예정입니다.
[self_end(2)]
[rep_start(2)]
목표: 각 자릿수를 하나씩 검사하는 반복문을 만드세요.

예: while (조건) {
조건: n이 0보다 클 때까지 반복하세요.
[self_start(3)]
목표: 현재 가장 오른쪽 자릿수를 추출하세요.

int 타입 변수 digit을 선언하고 n을 10으로 나눈 나머지로 초기화하세요.
[self_end(3)]
[cond_start(3)]
목표: 추출한 자릿수가 짝수인지 판단하세요.

if (조건) {
조건: digit을 2로 나눈 나머지가 0인지 확인하는 조건을 작성하세요.
[self_start(4)]
목표: 짝수 자릿수를 발견했으므로 플래그를 변경하세요.

all_odd 변수를 0으로 설정하세요.
[self_end(4)]
[self_start(4)]
목표: 더 이상 검사할 필요가 없으므로 반복문을 종료하세요.

break문을 사용하세요.
[self_end(4)]
[cond_end(3)]
[self_start(3)]
목표: 다음 자릿수를 검사하기 위해 수를 줄이세요.

n을 10으로 나눈 몫으로 업데이트하세요.
[self_end(3)]
[rep_end(2)]
[cond_start(2)]
목표: 모든 자릿수가 홀수였는지 확인하세요.

if (조건) {
조건: all_odd가 참인지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 조건을 만족하므로 카운트를 증가시키세요.

count 변수를 1 증가시키세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 조건을 만족하는 수의 개수를 반환하세요.

return문을 사용해서 count 변수를 반환하세요.
[self_end(1)]
[func_def_end(0)]
[main_def_start(0)]
목표: n개의 정수를 입력받아 모든 자릿수가 홀수인 수의 개수를 출력하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
반환 타입은 int이고 매개변수는 void로 설정하세요.
이 프로그램은 n개의 정수를 입력받아 모든 자릿수가 홀수인 수의 개수를 출력합니다.
[self_start(1)]
목표: 입력받을 정수의 개수를 저장할 변수를 만드세요.

int 타입 변수 n을 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 정수의 개수를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 n에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(1)]
[self_start(1)]
목표: 정수들을 저장할 배열을 만드세요.

int 타입 배열 arr을 크기 100으로 선언하세요.
[self_end(1)]
[rep_start(1)]
목표: 사용자로부터 n개의 정수를 입력받는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 n보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 각 배열 요소에 정수를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 arr[i]에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 모든 자릿수가 홀수인 수의 개수를 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 count_all_odd_digits 함수의 결과를 출력하세요.
함수 호출 시 배열 arr과 크기 n을 매개변수로 전달하세요.
[self_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.

return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1)]
[main_def_end(0)]
