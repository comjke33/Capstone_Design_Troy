[func_def_start(0)]
정수 배열 arr[]와 출력할 결과 배열 result[], 배열의 크기 size를 매개변수로 받는 int 반환형 `removeEven` 함수를 정의하세요.
짝수를 제거하고 남은 홀수의 개수를 반환하는 함수입니다.
[self_start(1)]
int형 변수 i와 count를 선언하고 count는 0으로 초기화하세요.
[self_end(1)]
[rep_start(1)]
i가 0부터 size보다 작을 때까지 반복하는 for문을 작성하세요.
각 요소를 확인하여 짝수를 필터링하는 과정입니다.
[rep_end(1)]
[cond_start(2)]
arr[i]가 홀수인지 확인하여 홀수라면 result[count]에 저장하고 count를 증가시키세요.
[cond_end(2)]
[self_start(1)]
홀수가 몇 개인지 count를 반환하세요.
[self_end(1)]
[func_def_end(0)]

[main_def_start(0)]
main함수입니다.
[self_start(1)]
정수 n, 정수 배열 arr[100], 결과 배열 result[100], 반복문 제어 변수 i와 새로운 크기를 저장할 newSize 변수를 선언하세요.
n을 입력받는 코드를 작성하세요.
[self_end(1)]
[rep_start(1)]
i가 0부터 n보다 작을 때까지 반복하는 for문을 작성하고, 각 배열 요소를 입력받아 arr[i]에 저장하세요.
이 과정은 배열을 초기화하는 작업입니다.
[rep_end(1)]
[self_start(1)]
removeEven 함수를 호출하여 홀수를 제거하고 남은 홀수의 개수를 newSize에 저장하세요.
결과를 출력하기 위해 newSize를 출력하세요.
[self_end(1)]
[cond_start(1)]
newSize가 0보다 큰 경우에 대해 조건문을 작성하세요.
[rep_start(2)]
홀수를 순서대로 출력하는 for문을 작성하세요.
출력할 때 각 요소 사이에 공백을 추가하는 조건을 작성하세요.
[rep_end(2)]
[self_start(2)]
출력 후 줄 바꿈을 하세요.
[self_end(2)]
[cond_end(1)]
[self_start(1)]
프로그램을 종료하세요.
[self_end(1)]
[main_def_end(0)]