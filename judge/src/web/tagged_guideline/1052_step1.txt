[main_def_start(0)]
main 함수를 정의하세요.
[self_start(1)]
정수형 상수 MAX를 10000으로 선언하여 스택의 최대 크기를 설정하세요.
[self_end(1)]
[self_start(1)]
길이 10000인 정수형 배열 stack을 선언하여 스택을 구현하세요.
[self_end(1)]
[self_start(1)]
정수형 변수 top_index를 -1로 초기화하여 스택의 현재 인덱스를 나타내세요.
[self_end(1)]
[self_start(1)]
정수형 변수 N을 선언하여 명령의 개수를 저장하세요.
[self_end(1)]
[self_start(1)]
scanf 함수를 사용하여 N 값을 입력 받으세요.
[self_end(1)]
[self_start(1)]
길이 10인 char 배열 command를 선언하여 명령어를 저장하세요.
[self_end(1)]
[rep_start(1)]
N만큼 반복하는 for문을 작성하세요.
각 반복에서 명령어를 처리하는 과정입니다.
[self_start(2)]
scanf 함수를 사용하여 command에 명령어를 입력 받으세요.
[self_end(2)]
[cond_start(2)]
command가 "push"인 경우에 동작하는 if문을 작성하세요.
스택에 값을 넣는 명령어를 처리하는 부분입니다.
[self_start(3)]
정수형 변수 x를 선언하여 스택에 넣을 값을 저장할 공간을 확보하세요.
[self_end(3)]
[self_start(3)]
scanf 함수를 사용하여 x에 값을 입력 받으세요.
[self_end(3)]
[cond_start(3)]
top_index + 1이 MAX보다 작은 경우에 동작하는 if문을 작성하세요.
스택이 꽉 차지 않았는지 확인하는 조건문입니다.
[self_start(4)]
stack의 top_index 위치에 x 값을 저장하고 top_index를 1 증가시키세요.
[self_end(4)]
[cond_end(3)]
[cond_end(2)]
[cond_start(2)]
command가 "pop"인 경우에 동작하는 else if문을 작성하세요.
스택에서 값을 빼는 명령어를 처리하는 부분입니다.
[cond_start(3)]
top_index가 -1인 경우에 동작하는 if문을 작성하세요.
스택이 비어있을 때의 처리입니다.
[self_start(4)]
printf 함수를 사용하여 -1을 출력하세요.
[self_end(4)]
[cond_end(3)]
[cond_start(3)]
그렇지 않은 경우에 동작하는 else문을 작성하세요.
스택에 값이 있을 때의 처리입니다.
[self_start(4)]
printf 함수를 사용하여 stack[top_index] 값을 출력하고 top_index를 1 감소시키세요.
[self_end(4)]
[cond_end(3)]
[cond_end(2)]
[cond_start(2)]
command가 "size"인 경우에 동작하는 else if문을 작성하세요.
스택의 현재 크기를 출력하는 명령어를 처리하는 부분입니다.
[self_start(3)]
printf 함수를 사용하여 top_index + 1 값을 출력하세요.
[self_end(3)]
[cond_end(2)]
[cond_start(2)]
command가 "empty"인 경우에 동작하는 else if문을 작성하세요.
스택이 비어있는지 체크하는 명령어를 처리하는 부분입니다.
[self_start(3)]
printf 함수를 사용하여 (top_index == -1) 조건을 이용해 1 또는 0을 출력하세요.
스택이 비어있으면 1을, 아니면 0을 출력합니다.
[self_end(3)]
[cond_end(2)]
[cond_start(2)]
command가 "top"인 경우에 동작하는 else if문을 작성하세요.
스택의 가장 위 값을 출력하는 명령어를 처리하는 부분입니다.
[cond_start(3)]
top_index가 -1인 경우에 동작하는 if문을 작성하세요.
스택이 비어있을 때의 처리입니다.
[self_start(4)]
printf 함수를 사용하여 -1을 출력하세요.
[self_end(4)]
[cond_end(3)]
[cond_start(3)]
그렇지 않은 경우에 동작하는 else문을 작성하세요.
스택에 값이 있을 때의 처리입니다.
[self_start(4)]
printf 함수를 사용하여 stack[top_index] 값을 출력하세요.
[self_end(4)]
[cond_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
프로그램을 종료하세요.
[self_end(1)]
[main_def_end(0)]