[main_def_start(0)]
목표: 문자열에서 대문자와 소문자 개수를 세는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요. 반환 타입은 int이고 매개변수는 void로 설정하세요.
[self_start(1)]
목표: 입력받을 문자열을 저장할 공간을 만드세요.

변수명은 str로 하고 char 타입 배열을 크기 101로 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 대문자와 소문자 개수를 세기 위한 변수를 만드세요.

int 타입 변수 upper와 lower를 선언하고 둘 다 0으로 초기화하세요.
[self_end(1)]
[self_start(1)]
목표: 사용자로부터 문자열을 입력받으세요.

scanf 함수와 %s 형식 지정자를 사용해서 str 배열에 저장하세요.
[self_end(1)]
[rep_start(1)]
목표: 문자열의 각 문자를 하나씩 검사하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: str[i]가 널 문자가 아닐 때까지, 반복: i를 1씩 증가
[cond_start(2)]
목표: 현재 살펴보고 있는 문자가 대문자인지 판단하세요.

if (조건) {
조건: 대문자 A부터 Z까지의 범위에 있는지 비교하는 조건을 작성하세요.
[self_start(3)]
목표: 대문자를 발견했으므로 대문자 개수를 증가시키세요.

upper 변수를 1 증가시키세요.
[self_end(3)]
[cond_end(2)]
[cond_start(2)]
목표: 현재 살펴보고 있는 문자가 소문자인지 판단하세요.

else if (조건) {
조건: 소문자 a부터 z까지의 범위에 있는지 비교하는 조건을 작성하세요.
[self_start(3)]
목표: 소문자를 발견했으므로 소문자 개수를 증가시키세요.

lower 변수를 1 증가시키세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 대문자 개수를 화면에 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 upper 변수를 출력하고 줄바꿈을 추가하세요.
[self_end(1)]
[self_start(1)]
목표: 소문자 개수를 화면에 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 lower 변수를 출력하세요.
[self_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.

return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1)]
[main_def_end(0)]