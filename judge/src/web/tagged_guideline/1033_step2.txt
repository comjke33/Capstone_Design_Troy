[func_def_start(0)]
목표: 배열에서 홀수의 개수를 세는 함수를 만드세요.

함수명은 count_odd로 하고 매개변수는 배열 arr과 배열 크기 size를 받도록 하세요.
[self_start(1)]
목표: 홀수 개수를 세기 위한 변수를 만드세요.

변수 count를 선언하고 0으로 초기화하세요.
[self_end(1)]
[rep_start(1)]
목표: 배열의 모든 요소를 하나씩 검사하는 반복문을 만드세요.

변수 i를 사용해서 배열의 모든 요소를 순회하세요.
[cond_start(2)]
목표: 현재 배열 요소가 홀수인지 판단하세요.

홀수일 때만 count를 증가시키세요.
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 홀수 개수를 반환하세요.

return문을 사용해서 count 변수를 반환하세요.
[self_end(1)]
[func_def_end(0)]
[func_def_start(0)]
목표: 배열에서 짝수의 개수를 세는 함수를 만드세요.

함수명은 count_even으로 하고 매개변수는 배열 arr과 배열 크기 size를 받도록 하세요.
[self_start(1)]
목표: 짝수 개수를 세기 위한 변수를 만드세요.

변수 count를 선언하고 0으로 초기화하세요.
[self_end(1)]
[rep_start(1)]
목표: 배열의 모든 요소를 하나씩 검사하는 반복문을 만드세요.

변수 i를 사용해서 배열의 모든 요소를 순회하세요.
[cond_start(2)]
목표: 현재 배열 요소가 짝수인지 판단하세요.

짝수일 때만 count를 증가시키세요.
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 짝수 개수를 반환하세요.

return문을 사용해서 count 변수를 반환하세요.
[self_end(1)]
[func_def_end(0)]
[main_def_start(0)]
목표: 10개의 정수를 입력받아 홀수와 짝수 개수를 출력하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
[self_start(1)]
목표: 10개의 정수를 저장할 배열을 만드세요.

배열 arr을 크기 10으로 선언하세요.
[self_end(1)]
[rep_start(1)]
목표: 사용자로부터 10개의 정수를 입력받는 반복문을 만드세요.

변수 i를 사용해서 10번 반복하면서 각 배열 요소에 입력받으세요.
[rep_end(1)]
[self_start(1)]
목표: 홀수와 짝수 개수를 출력하세요.

count_odd 함수와 count_even 함수를 호출해서 결과를 출력하고 프로그램을 종료하세요.
[self_end(1)]
[main_def_end(0)]