[self_start(0)]
정휘는 후배들이 재귀 함수를 잘 다루는 재귀의 귀재인지 알아보기 위해 재귀 함수와 관련된 문제를 출제하기로 했다.
[self_end(0)]

[self_start(0)]
팰린드롬이란, 앞에서부터 읽었을 때와 뒤에서부터 읽었을 때가 같은 문자열을 말한다. 팰린드롬의 예시로 AAA, ABBA, ABABA 등이 있고, 팰린드롬이 아닌 문자열의 예시로 ABCA, PALINDROME 등이 있다.
[self_end(0)]

[self_start(0)]
어떤 문자열이 팰린드롬인지 판별하는 문제는 재귀 함수를 이용해 쉽게 해결할 수 있다. 아래 코드의 isPalindrome 함수는 주어진 문자열이 팰린드롬이면 1, 팰린드롬이 아니면 0을 반환하는 함수다.
[self_end(0)]

[self_start(0)]
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
[self_end(0)]

[self_start(0)]
int recursion (const char *s, int l, int r ) {
[self_start(1)]
    cnt++;
[self_end(1)]
[self_start(1)]
    [cond_start(1)]
    if (l >=r ) {
[self_start(2)]
        return 1;
[self_end(2)]
[cond_end(1)]
}
[self_start(1)]
[cond_start(1)]
    [cond_start(1)]
    if (s[l] !=s[r] ) {
[self_start(2)]
        return 0;
[self_end(2)]
[cond_end(1)]
[self_start(1)]
    [self_start(1)]
    return recursion (s, l+1, r-1 );
[self_end(1)]
[self_end(1)]
[func_def_end(0)]
}
[self_start(0)]

[self_start(0)]
int isPalindrome (const char *s ) {
[self_start(1)]
    cnt =0;
[self_end(1)]
[self_start(1)]
    [self_start(1)]
    return recursion (s, 0, strlen (s ) -1 );
[self_end(1)]
[self_end(1)]
[func_def_end(0)]
}
[self_start(0)]

[self_start(0)]
[main_def_start(0)]
int main () {
[self_start(1)]
    [self_start(1)]
    int T;
[self_end(1)]
[self_start(1)]
    [cond_start(1)]
    [cond_start(1)]
    if (scanf ("%d", &T ) !=1 ) {
[self_start(2)]
        return 0;
[self_end(2)]
[cond_end(1)]
[self_start(1)]
[rep_start(1)]
    [self_start(2)]
        [self_start(2)]
        char S[1001];
[self_end(2)]
[self_start(2)]
        [self_start(2)]
        scanf ("%s", S );
[self_end(2)]
[self_start(2)]
        [self_start(2)]
        int result =isPalindrome (S );
[self_end(2)]
[self_start(2)]
        [self_start(2)]
        printf ("%d %d\n", result, cnt );
[self_end(2)]
[rep_end(1)]
[self_start(1)]
[self_start(1)]
    return 0;
[self_end(1)]
[main_def_end(0)]
}
[self_end(0)]