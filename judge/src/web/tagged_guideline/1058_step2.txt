[main_def_start(0)]
main 함수입니다.
[self_start(1)]
정수를 저장할 배열 queue와 front, rear, size 변수(초기화 필요)를 선언하고, 명령의 수를 입력받을 변수 n을 선언하세요.
또한 명령어를 저장할 char 배열 command와 정수 x를 선언하세요.
[self_end(1)]
[rep_start(1)]
0부터 n-1까지 반복하는 for문을 작성하세요.
각각의 명령을 처리하기 위한 구조입니다.
[rep_end(1)]
[self_start(2)]
명령어를 입력받아 command에 저장하세요.
[self_end(2)]
[cond_start(2)]
입력받은 명령어가 "push"일 경우를 처리하세요.
정수를 입력받아 큐에 추가하는 과정입니다.
[cond_end(2)]
[cond_start(2)]
"pop" 명령어일 경우를 처리하세요.
큐에서 값을 제거하고 출력하는 경우입니다.
[cond_end(2)]
[cond_start(2)]
"size" 명령어일 경우 현재 큐의 크기를 출력하세요.
[cond_end(2)]
[cond_start(2)]
"empty" 명령어일 경우 큐가 비어있는지 확인하고 결과를 출력하세요.
[cond_end(2)]
[cond_start(2)]
"front" 명령어일 경우 큐의 가장 앞 원소를 출력합니다.
비어있을 경우 -1을 출력하는 상황입니다.
[cond_end(2)]
[cond_start(2)]
"back" 명령어일 경우 큐의 가장 뒤 원소를 출력합니다.
비어있을 경우 -1을 출력하는 상황입니다.
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
프로그램을 종료하세요.
[self_end(1)]
[main_def_end(0)]