[main_def_start(0)]
목표: 큐 자료구조를 구현하여 여러 명령을 처리하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
[self_start(1)]
목표: 필요한 변수들을 선언하고 명령 개수를 입력받으세요.

큐 배열 queue, 앞쪽 인덱스 front, 뒤쪽 인덱스 rear, 큐 크기 size, 명령 개수 n, 명령어 command, 값 x를 선언하고 n을 입력받으세요.
[self_end(1)]
[rep_start(1)]
목표: n번의 명령을 처리하는 반복문을 만드세요.

변수 i를 사용해서 n번 반복하세요.
[self_start(2)]
목표: 명령어를 입력받으세요.

command에 명령어 문자열을 입력받으세요.
[self_end(2)]
[cond_start(2)]
목표: push 명령을 처리하세요.

command가 "push"일 때 정수를 입력받아 큐의 뒤쪽에 추가하세요.
[cond_end(2)]
[cond_start(2)]
목표: pop 명령을 처리하세요.

command가 "pop"일 때 큐가 비어있으면 -1을, 아니면 앞쪽 요소를 출력하고 제거하세요.
[cond_start(3)]
목표: 큐가 비어있는 경우를 처리하세요.

size가 0일 때 -1을 출력하세요.
[cond_end(3)]
[cond_start(3)]
목표: 큐에 요소가 있는 경우를 처리하세요.

큐의 앞쪽 요소를 출력하고 front를 이동시키고 size를 감소시키세요.
[cond_end(3)]
[cond_end(2)]
[cond_start(2)]
목표: size 명령을 처리하세요.

command가 "size"일 때 큐의 크기를 출력하세요.
[cond_end(2)]
[cond_start(2)]
목표: empty 명령을 처리하세요.

command가 "empty"일 때 큐가 비어있으면 1을, 아니면 0을 출력하세요.
[cond_start(3)]
목표: 큐가 비어있는 경우를 처리하세요.

size가 0일 때 1을 출력하세요.
[cond_end(3)]
[cond_start(3)]
목표: 큐에 요소가 있는 경우를 처리하세요.

0을 출력하세요.
[cond_end(3)]
[cond_end(2)]
[cond_start(2)]
목표: front 명령을 처리하세요.

command가 "front"일 때 큐가 비어있으면 -1을, 아니면 앞쪽 요소를 출력하세요.
[cond_start(3)]
목표: 큐가 비어있는 경우를 처리하세요.

size가 0일 때 -1을 출력하세요.
[cond_end(3)]
[cond_start(3)]
목표: 큐에 요소가 있는 경우를 처리하세요.

큐의 앞쪽 요소를 출력하세요.
[cond_end(3)]
[cond_end(2)]
[cond_start(2)]
목표: back 명령을 처리하세요.

command가 "back"일 때 큐가 비어있으면 -1을, 아니면 뒤쪽 요소를 출력하세요.
[cond_start(3)]
목표: 큐가 비어있는 경우를 처리하세요.

size가 0일 때 -1을 출력하세요.
[cond_end(3)]
[cond_start(3)]
목표: 큐에 요소가 있는 경우를 처리하세요.

큐의 뒤쪽 요소를 출력하세요.
[cond_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 프로그램을 종료하세요.

프로그램을 정상적으로 종료하세요.
[self_end(1)]
[main_def_end(0)]