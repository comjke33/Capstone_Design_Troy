[func_def_start(0)]
정수형 배열에서 최댓값을 찾는 `findMax` 함수를 정의하세요.
int형 배열 `arr[]`을 매개변수로 받습니다.
정수형 `size`를 매개변수로 받아 배열의 크기를 표현합니다.
[self_start(1)]
정수를 저장할 변수 `i`를 선언하세요.
[self_end(1)]
[self_start(1)]
배열의 첫 번째 요소로 초기화된 정수형 변수 `max`를 선언하세요.
기본 최댓값을 배열의 첫 번째 값으로 설정합니다.
[self_end(1)]
[rep_start(1)]
`i`를 1부터 시작하여 `size`보다 작은 동안 반복하는 for문을 작성하세요.
배열의 나머지 요소를 검사하기 위한 반복문입니다.
[cond_start(2)]
배열의 현재 요소가 `max`보다 클 경우의 if문을 작성하세요.
현재 요소가 지금까지의 최댓값보다 큰지 비교하는 조건문입니다.
[self_start(3)]
조건이 참일 경우 가장 큰 값인 `max`를 현재 요소로 업데이트하세요.
최댓값을 갱신합니다.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
최종 최댓값을 반환하세요.
[self_end(1)]
[func_def_end(0)]

[main_def_start(0)]
main 함수를 정의하세요.
[self_start(1)]
정수형 변수 `n`을 선언하세요.
배열의 크기를 저장할 변수입니다.
[self_end(1)]
[self_start(1)]
길이가 100인 정수형 배열 `arr`을 선언하세요.
최댓값을 찾을 배열입니다.
[self_end(1)]
[self_start(1)]
정수형 변수 `i`와 `max`를 선언하세요.
반복문 인덱스와 최댓값을 저장하기 위한 변수입니다.
[self_end(1)]
[self_start(1)]
`scanf` 함수를 사용하여 사용자로부터 배열의 크기 `n`을 입력 받으세요.
배열의 정확한 크기를 받아오기 위함입니다.
[self_end(1)]
[rep_start(1)]
`i`가 0부터 `n`보다 작은 동안 반복하는 for문을 작성하세요.
`n`까지의 배열 요소를 입력받기 위해 반복합니다.
[self_start(2)]
`scanf` 함수를 사용하여 배열의 각 요소를 입력 받으세요.
각 요소에 값을 채워 넣는 과정입니다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
`findMax` 함수를 호출하여 배열과 크기를 전달하고 결과를 `max`에 저장하세요.
최댓값을 찾기 위한 함수 호출입니다.
[self_end(1)]
[self_start(1)]
`printf` 함수를 사용하여 `max` 값을 출력하세요.
최댓값을 사용자에게 표시하는 단계입니다.
[self_end(1)]
[self_start(1)]
프로그램을 종료하세요.
[self_end(1)]
[main_def_end(0)]