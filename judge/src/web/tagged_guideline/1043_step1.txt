[func_def_start(0)]
목표: 배열을 역순으로 복사하는 함수를 만드세요.

함수명은 reverse_copy로 하고 반환 타입은 void로 설정하세요.
매개변수는 원본 배열 src, 대상 배열 dest, 배열 크기 size를 받도록 하세요.
이 함수는 원본 배열의 요소들을 역순으로 대상 배열에 복사합니다.
[rep_start(1)]
목표: 배열의 모든 요소를 역순으로 복사하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 size보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 원본 배열의 뒤쪽 요소를 대상 배열의 앞쪽에 복사하세요.

dest[i]에 src[size-1-i] 값을 대입하세요.
size-1-i는 배열의 끝에서부터 역순으로 인덱스를 계산합니다.
[self_end(2)]
[rep_end(1)]
[func_def_end(0)]
[main_def_start(0)]
목표: n개의 정수를 입력받아 역순으로 출력하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
반환 타입은 int이고 매개변수는 void로 설정하세요.
이 프로그램은 n개의 정수를 입력받아 reverse_copy 함수를 사용해 역순으로 출력합니다.
[self_start(1)]
목표: 배열의 크기를 저장할 변수를 만드세요.

int 타입 변수 n을 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 원본 배열과 대상 배열을 만드세요.

int 타입 배열 src와 dest를 각각 크기 100으로 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 배열의 크기를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 n에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(1)]
[rep_start(1)]
목표: 원본 배열에 n개의 정수를 입력받는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 n보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 각 배열 요소에 정수를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 src[i]에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
목표: reverse_copy 함수를 호출해서 배열을 역순으로 복사하세요.

함수 호출 시 src, dest, n을 매개변수로 전달하세요.
[self_end(1)]
[rep_start(1)]
목표: 역순으로 복사된 배열을 출력하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 n보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 각 배열 요소를 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 dest[i] 값을 출력하세요.
[self_end(2)]
[cond_start(2)]
목표: 마지막 요소가 아니면 공백을 출력하세요.

if (조건) {
조건: i가 n-1보다 작은지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 요소 사이에 공백을 추가하세요.

printf 함수를 사용해서 공백 문자를 출력하세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.

return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1)]
[main_def_end(0)]