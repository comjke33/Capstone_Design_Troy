[func_def_start(0)]
목표: 배열에서 특정 값을 제거하는 함수를 만드세요.

함수명은 remove_element로 하고 반환 타입은 void로 설정하세요.
매개변수는 int 배열 arr, 배열 크기 size, 제거할 값 target을 받도록 하세요.
이 함수는 배열에서 target과 같은 값을 찾아 -1로 변경합니다.
[rep_start(1)]
목표: 배열의 모든 요소를 검사하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 size보다 작을 때까지, 반복: i를 1씩 증가
[cond_start(2)]
목표: 현재 요소가 제거할 값과 같은지 확인하세요.

if (조건) {
조건: arr[i]가 target과 같은지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 제거할 값을 발견했으므로 -1로 변경하세요.

arr[i]에 -1을 대입하세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[func_def_end(0)]
[main_def_start(0)]
목표: n개의 정수를 입력받고 특정 값을 제거한 후 출력하는 프로그램을 만드세요.

프로그램의 시작점인 main 함수를 정의하세요.
반환 타입은 int이고 매개변수는 void로 설정하세요.
이 프로그램은 n개의 정수와 제거할 값을 입력받아 제거 후 남은 값들을 출력합니다.
[self_start(1)]
목표: 배열의 크기와 제거할 값을 저장할 변수를 만드세요.

int 타입 변수 n과 x를 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 정수들을 저장할 배열을 만드세요.

int 타입 배열 arr을 크기 100으로 선언하세요.
[self_end(1)]
[self_start(1)]
목표: 배열의 크기를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 n에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(1)]
[rep_start(1)]
목표: 배열에 n개의 정수를 입력받는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 n보다 작을 때까지, 반복: i를 1씩 증가
[self_start(2)]
목표: 각 배열 요소에 정수를 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 arr[i]에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 제거할 값을 입력받으세요.

scanf 함수와 %d 형식 지정자를 사용해서 x에 저장하세요.
주소 연산자(&)를 사용해야 합니다.
[self_end(1)]
[self_start(1)]
목표: remove_element 함수를 호출해서 특정 값을 제거하세요.

함수 호출 시 arr, n, x를 매개변수로 전달하세요.
[self_end(1)]
[rep_start(1)]
목표: 제거되지 않은 요소들을 출력하는 반복문을 만드세요.

예: for (초기값; 조건; 증감) {
초기값: i를 0으로 시작, 조건: i가 n보다 작을 때까지, 반복: i를 1씩 증가
[cond_start(2)]
목표: 현재 요소가 제거되지 않았는지 확인하세요.

if (조건) {
조건: arr[i]가 -1이 아닌지 확인하는 조건을 작성하세요.
[self_start(3)]
목표: 제거되지 않은 값이므로 출력하세요.

printf 함수와 %d 형식 지정자를 사용해서 arr[i]를 출력하고 공백을 추가하세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
목표: 프로그램을 정상 종료하세요.

return 0을 작성해서 성공적인 종료를 알리세요.
[self_end(1)]
[main_def_end(0)]