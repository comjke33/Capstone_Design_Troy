[func_def_start(0)]
소수인지 판별하는 함수를 정의하세요. `is_prime` 함수를 만들고, 정수형 `n`을 매개변수로 받습니다.

[cond_start(1)]
`n`이 1보다 작거나 같으면 소수가 아닙니다. 즉, 0을 반환합니다.
[self_start(2)]
`n`이 1보다 작거나 같으면 함수를 종료하고 0을 반환하세요.
[self_end(2)]
[cond_end(1)]

[rep_start(1)]
2부터 시작하여 `i * i <= n`보다 작거나 같은 동안 반복하는 for문을 작성하세요.
[cond_start(2)]
i가 `n`의 약수이면 소수가 아닙니다. 즉, 0을 반환하세요.
[self_start(3)]
`i`가 `n`의 약수이면 함수를 종료하고 0을 반환하세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
소수이면 1을 반환하세요.
[self_end(1)]
[func_def_end(0)]

[main_def_start(0)]
정수형 변수 `num`을 선언하세요.
[self_start(1)]
정수형 변수 `num`을 선언하세요. 소수를 찾을 수를 저장할 변수입니다.
[self_end(1)]
[self_start(1)]
scanf 함수를 사용하여 `num`에 사용자로부터 입력을 받으세요.
[self_end(1)]
[rep_start(1)]
2부터 `num`까지 반복하는 for문을 작성하세요.
[cond_start(2)]
`is_prime(i)` 함수 호출 결과가 1이면, 즉 `i`가 소수이면, 출력하세요.
[self_start(3)]
소수 `i`를 출력하세요.
[self_end(3)]
[cond_end(2)]
[rep_end(1)]
[self_start(1)]
프로그램을 종료하세요.
[self_end(1)]
[main_def_end(0)]