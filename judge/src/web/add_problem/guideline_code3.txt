[func_def_start(0)]
이 함수는 main 함수로, 프로그램의 시작 지점이다.
[self_start(1)]
두 개의 문자열을 저장할 배열 word1과 word2를 선언하고, 케이스 번호를 기록할 변수 case_num을 1로 초기화한다.
[self_end(1)]
[rep_start(1)]
무한 루프를 시작하여 각 케이스를 처리한다.
[self_start(2)]
루프 내에서 알파벳의 개수를 저장하기 위한 두 개의 배열 count1과 count2를 선언하고, 각각 초기화한다. 그리고 반복 제어 변수 i를 0으로 초기화한다.
[self_end(2)]
문자열 word1과 word2를 입력받는다.
[cond_start(2)]
입력받은 문자열이 "END"인지 확인한다. 만약 두 문자열이 "END"라면, 루프를 종료하고 프로그램을 마무리한다.
[cond_end(2)]
[self_start(2)]
문자열 word1의 각 문자를 읽어가며 해당 알파벳의 개수를 count1 배열에 기록한다. 이때, 읽은 문자가 NULL이라면 반복을 종료한다.
[self_end(2)]
[self_start(2)]
마찬가지로 문자열 word2의 각 문자를 읽어가며 해당 알파벳의 개수를 count2 배열에 기록한다. 이때, 읽은 문자가 NULL이라면 반복을 종료한다.
[self_end(2)]
[self_start(2)]
same이라는 변수를 1로 초기화하여, 두 문자열의 알파벳 개수가 같음을 가정한다.
[self_end(2)]
[rep_start(2)]
26개의 알파벳에 대해 반복하면서, 각각의 알파벳 개수를 비교한다.
[cond_start(3)]
만약 두 count 배열의 값이 다르다면, same 변수를 0으로 설정하여 두 문자열이 다른 것을 표시한다.
[cond_end(3)]
[rep_end(2)]
[self_start(2)]
결과를 출력하기 위해 케이스 번호를 포함한 문자열을 출력한다.
[self_end(2)]
[cond_start(2)]
same 변수가 1이면, "same"이라는 메시지를 출력한다.
[cond_end(2)]
[cond_start(2)]
그렇지 않으면 "different"라는 메시지를 출력한다.
[cond_end(2)]
[self_start(2)]
케이스 번호를 1 증가시켜 다음 케이스에 대비한다.
[self_end(2)]
[rep_end(1)]
[self_start(1)]
프로그램을 정상적으로 종료한다.
[self_end(1)]
[func_def_end(0)]