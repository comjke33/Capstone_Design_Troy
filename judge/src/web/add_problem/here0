1059
&lt;span class=&#039;md auto_select&#039;&gt;주어진 x, y 값 10쌍에 대해 y = ax + b 형태의 선형 회귀식을 구한 후, 임의의 x값에 대해 예측된 y값을 출력하라. 결과는 소수점 둘째 자리까지 출력하며, 출력 끝에 줄바꿈 문자가 없다.   
#include <stdio.h>  void inputData(float x[], float y[], int size, float* sum_x, float* sum_y, float* sum_xy, float* sum_x2) { for(int i = 0; i < size; i++) { scanf("%f %f", &x[i], &y[i]); *sum_x += x[i]; *sum_y += y[i]; *sum_xy += x[i] AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test y[i]; *sum_x2 += x[i] AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test x[i]; } }  void calculateCoefficients(float sum_x, float sum_y, float sum_xy, float sum_x2, int size, float* a, float* b) { *a = (size AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test sum_xy - sum_x AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test sum_y) / (size AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test sum_x2 - sum_x AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test sum_x); *b = (sum_y - (*a) AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test sum_x) / size; }  float predict(float a, float b, float test_x) { return a AIFlowchart.py a.py check_exmaply.py error.log evaluate_chart.py flowcharts guest-client.py guest-client2.py guest-client3.py guideline_code1.txt guideline_code2.txt guideline_code3.txt here0 level_test log.txt make_comment.py make_flowchart.py make_guideline.py make_question_and_code.py original_code1.txt original_code2.txt original_code3.txt original_code_test.txt questions_and_codes.json run_add_problem.sh step1_test_tagged_guideline tagged_code1.txt tagged_code2.txt tagged_code3.txt tagged_code_test.txt test.c test.json test.txt test2.txt test_test.txt total_test test_x + b; }  int main() { float x[10], y[10], sum_x = 0, sum_y = 0, sum_xy = 0, sum_x2 = 0, a, b; int size = 10;  inputData(x, y, size, &sum_x, &sum_y, &sum_xy, &sum_x2); calculateCoefficients(sum_x, sum_y, sum_xy, sum_x2, size, &a, &b);  float test_x; scanf("%f", &test_x); float pred = predict(a, b, test_x); printf("%.2f", pred);  return 0; }
/home/Capstone_Design_Troy/judge/src/web/flowcharts/
